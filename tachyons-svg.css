/*

## included svg css classes

- [x] stroke
- [x] stroke-opacity
- [x] stroke-opacity on hover
- [x] stroke-width
- [x] stroke-dasharray
- [x] stroke-linecap
- [x] stroke-linejoin
- [x] fill
- [x] fill on hover
- [x] fill-opacity
- [x] fill-opacity on hover
- [x] shape-rendering

## todo

- [ ] add a description for each section.
- [ ] add the css property/properties for each section.
- [ ] add the supported values (if applicable) for each section.
- [ ] decide on the syntax for stroke-linejoin, stroke-linecap.

*/


/*
  property: stroke
  supported values: <hex> | <rgba>
*/

.stroke-black { stroke: #000; }
.stroke-near-black { stroke: #111; }
.stroke-dark-gray { stroke: #333; }
.stroke-mid-gray { stroke: #555; }
.stroke-gray { stroke: #777; }
.stroke-silver { stroke: #999; }
.stroke-light-silver { stroke: #aaa; }
.stroke-light-gray { stroke: #eee; }
.stroke-near-white { stroke: #f4f4f4; }
.stroke-white { stroke: #fff; }
.stroke-white-90 { stroke: rgba( 255, 255, 255, .9 ); }
.stroke-white-80 { stroke: rgba( 255, 255, 255, .8 ); }
.stroke-white-70 { stroke: rgba( 255, 255, 255, .7 ); }
.stroke-white-60 { stroke: rgba( 255, 255, 255, .6 ); }
.stroke-white-50 { stroke: rgba( 255, 255, 255, .5 ); }
.stroke-white-40 { stroke: rgba( 255, 255, 255, .4 ); }
.stroke-white-30 { stroke: rgba( 255, 255, 255, .3 ); }
.stroke-white-20 { stroke: rgba( 255, 255, 255, .2 ); }
.stroke-white-10 { stroke: rgba( 255, 255, 255, .1 ); }
.stroke-white-05 { stroke: rgba( 255, 255, 255, .05 ); }
.stroke-white-025 { stroke: rgba( 255, 255, 255, .025 ); }
.stroke-white-0125 { stroke: rgba( 255, 255, 255, .0125 ); }
.stroke-black-90 { stroke: rgba( 0, 0, 0, .9 ); }
.stroke-black-80 { stroke: rgba( 0, 0, 0, .8 ); }
.stroke-black-70 { stroke: rgba( 0, 0, 0, .7 ); }
.stroke-black-60 { stroke: rgba( 0, 0, 0, .6 ); }
.stroke-black-50 { stroke: rgba( 0, 0, 0, .5 ); }
.stroke-black-40 { stroke: rgba( 0, 0, 0, .4 ); }
.stroke-black-30 { stroke: rgba( 0, 0, 0, .3 ); }
.stroke-black-20 { stroke: rgba( 0, 0, 0, .2 ); }
.stroke-black-10 { stroke: rgba( 0, 0, 0, .1 ); }
.stroke-black-05 { stroke: rgba( 0, 0, 0, .05 ); }
.stroke-black-025 { stroke: rgba( 0, 0, 0, .025 ); }
.stroke-black-0125 { stroke: rgba( 0, 0, 0, .0125 ); }
.stroke-dark-red { stroke: #e7040f; }
.stroke-red { stroke: #ff4136; }
.stroke-light-red { stroke: #ff725c; }
.stroke-orange { stroke: #ff6300; }
.stroke-gold { stroke: #ffb700; }
.stroke-yellow { stroke: #ffd700; }
.stroke-light-yellow { stroke: #fbf1a9; }
.stroke-purple { stroke: #5e2ca5; }
.stroke-light-purple { stroke: #a463f2; }
.stroke-dark-pink { stroke: #d5008f; }
.stroke-hot-pink { stroke: #ff41b4; }
.stroke-pink { stroke: #ff80cc; }
.stroke-light-pink { stroke: #ffa3d7; }
.stroke-dark-green { stroke: #137752; }
.stroke-green { stroke: #19a974; }
.stroke-light-green { stroke: #9eebcf; }
.stroke-navy { stroke: #001b44; }
.stroke-dark-blue { stroke: #00449e; }
.stroke-blue { stroke: #357edd; }
.stroke-light-blue { stroke: #96ccff; }
.stroke-lightest-blue { stroke: #cdecff; }
.stroke-washed-blue { stroke: #f6fffe; }
.stroke-washed-green { stroke: #e8fdf5; }
.stroke-washed-yellow { stroke: #fffceb; }
.stroke-washed-red { stroke: #ffdfdf; }
.stroke-transparent { stroke: transparent; }


/*
  description: stroke opacity
  property: stroke-opacity
*/

.stroke-o-05 { stroke-opacity: .05; }
.stroke-o-10 { stroke-opacity: .10; }
.stroke-o-20 { stroke-opacity: .20; }
.stroke-o-25 { stroke-opacity: .25; }
.stroke-o-30 { stroke-opacity: .30; }
.stroke-o-40 { stroke-opacity: .40; }
.stroke-o-50 { stroke-opacity: .50; }
.stroke-o-60 { stroke-opacity: .60; }
.stroke-o-75 { stroke-opacity: .75; }
.stroke-o-80 { stroke-opacity: .80; }
.stroke-o-90 { stroke-opacity: .90; }


/*
  description: stroke
  property: stroke
*/

.stroke-none { stroke: none; }


/*
  description: stroke width, using unitless values
  property: stroke-width
*/

.stroke-w--1 { stroke-width: 1; }
.stroke-w--2 { stroke-width: 2; }
.stroke-w--3 { stroke-width: 3; }
.stroke-w--4 { stroke-width: 4; }
.stroke-w--5 { stroke-width: 5; }
.stroke-w--6 { stroke-width: 6; }


/*
  description: stroke dasharray, using unitless values
  property: stroke-dasharray
*/

.stroke-dash--1 { stroke-dasharray: 1; }
.stroke-dash--2 { stroke-dasharray: 2; }
.stroke-dash--3 { stroke-dasharray: 3; }
.stroke-dash--4 { stroke-dasharray: 4; }
.stroke-dash--5 { stroke-dasharray: 5; }
.stroke-dash--6 { stroke-dasharray: 6; }


/*
  description: type of join used at stroke intersections
  property: stroke-linejoin
  supported values: bevel | miter | round
*/

/* verbose syntax */
.stroke-linejoin-bevel { stroke-linejoin: bevel; }
.stroke-linejoin-miter { stroke-linejoin: miter; }
.stroke-linejoin-round { stroke-linejoin: round; }

/* alt syntax */
.stroke-lj-bevel { stroke-linejoin: bevel; }
.stroke-lj-miter { stroke-linejoin: miter; }
.stroke-lj-round { stroke-linejoin: round; }

/* alt syntax */
.stroke-join-bevel { stroke-linejoin: bevel; }
.stroke-join-miter { stroke-linejoin: miter; }
.stroke-join-round { stroke-linejoin: round; }


/*
  description: type of line cap, at the end of the stroke
  property: stroke-linecap
  supported values: butt | round | square
*/

/* verbose syntax */
.stroke-linecap-butt { stroke-linecap: butt; }
.stroke-linecap-round { stroke-linecap: round; }
.stroke-linecap-square { stroke-linecap: square; }

/* alt syntax */
.stroke-lc-butt { stroke-linecap: butt; }
.stroke-lc-round { stroke-linecap: round; }
.stroke-lc-square { stroke-linecap: square; }

/* alt syntax */
.stroke-cap-butt { stroke-linecap: butt; }
.stroke-cap-round { stroke-linecap: round; }
.stroke-cap-square { stroke-linecap: square; }


/*
  description: fill color
  property: fill
  supported values: <hex> | <rgba>
*/

.fill-black { fill: #000; }
.fill-near-black { fill: #111; }
.fill-dark-gray { fill: #333; }
.fill-mid-gray { fill: #555; }
.fill-gray { fill: #777; }
.fill-silver { fill: #999; }
.fill-light-silver { fill: #aaa; }
.fill-light-gray { fill: #eee; }
.fill-near-white { fill: #f4f4f4; }
.fill-white { fill: #fff; }
.fill-white-90 { fill: rgba( 255, 255, 255, .9 ); }
.fill-white-80 { fill: rgba( 255, 255, 255, .8 ); }
.fill-white-70 { fill: rgba( 255, 255, 255, .7 ); }
.fill-white-60 { fill: rgba( 255, 255, 255, .6 ); }
.fill-white-50 { fill: rgba( 255, 255, 255, .5 ); }
.fill-white-40 { fill: rgba( 255, 255, 255, .4 ); }
.fill-white-30 { fill: rgba( 255, 255, 255, .3 ); }
.fill-white-20 { fill: rgba( 255, 255, 255, .2 ); }
.fill-white-10 { fill: rgba( 255, 255, 255, .1 ); }
.fill-white-05 { fill: rgba( 255, 255, 255, .05 ); }
.fill-white-025 { fill: rgba( 255, 255, 255, .025 ); }
.fill-white-0125 { fill: rgba( 255, 255, 255, .0125 ); }
.fill-black-90 { fill: rgba( 0, 0, 0, .9 ); }
.fill-black-80 { fill: rgba( 0, 0, 0, .8 ); }
.fill-black-70 { fill: rgba( 0, 0, 0, .7 ); }
.fill-black-60 { fill: rgba( 0, 0, 0, .6 ); }
.fill-black-50 { fill: rgba( 0, 0, 0, .5 ); }
.fill-black-40 { fill: rgba( 0, 0, 0, .4 ); }
.fill-black-30 { fill: rgba( 0, 0, 0, .3 ); }
.fill-black-20 { fill: rgba( 0, 0, 0, .2 ); }
.fill-black-10 { fill: rgba( 0, 0, 0, .1 ); }
.fill-black-05 { fill: rgba( 0, 0, 0, .05 ); }
.fill-black-025 { fill: rgba( 0, 0, 0, .025 ); }
.fill-black-0125 { fill: rgba( 0, 0, 0, .0125 ); }
.fill-dark-red { fill: #e7040f; }
.fill-red { fill: #ff4136; }
.fill-light-red { fill: #ff725c; }
.fill-orange { fill: #ff6300; }
.fill-gold { fill: #ffb700; }
.fill-yellow { fill: #ffd700; }
.fill-light-yellow { fill: #fbf1a9; }
.fill-purple { fill: #5e2ca5; }
.fill-light-purple { fill: #a463f2; }
.fill-dark-pink { fill: #d5008f; }
.fill-hot-pink { fill: #ff41b4; }
.fill-pink { fill: #ff80cc; }
.fill-light-pink { fill: #ffa3d7; }
.fill-dark-green { fill: #137752; }
.fill-green { fill: #19a974; }
.fill-light-green { fill: #9eebcf; }
.fill-navy { fill: #001b44; }
.fill-dark-blue { fill: #00449e; }
.fill-blue { fill: #357edd; }
.fill-light-blue { fill: #96ccff; }
.fill-lightest-blue { fill: #cdecff; }
.fill-washed-blue { fill: #f6fffe; }
.fill-washed-green { fill: #e8fdf5; }
.fill-washed-yellow { fill: #fffceb; }
.fill-washed-red { fill: #ffdfdf; }
.fill-transparent { fill: transparent; }

/*
  description: fill color, on hover
  property: fill:hover
  supported values: <hex> | <rgba>
*/

.hover-fill-black:hover { fill: #000; }
.hover-fill-near-black:hover { fill: #111; }
.hover-fill-dark-gray:hover { fill: #333; }
.hover-fill-mid-gray:hover { fill: #555; }
.hover-fill-gray:hover { fill: #777; }
.hover-fill-silver:hover { fill: #999; }
.hover-fill-light-silver:hover { fill: #aaa; }
.hover-fill-light-gray:hover { fill: #eee; }
.hover-fill-near-white:hover { fill: #f4f4f4; }
.hover-fill-white:hover { fill: #fff; }
.hover-fill-white-90:hover { fill: rgba( 255, 255, 255, .9 ); }
.hover-fill-white-80:hover { fill: rgba( 255, 255, 255, .8 ); }
.hover-fill-white-70:hover { fill: rgba( 255, 255, 255, .7 ); }
.hover-fill-white-60:hover { fill: rgba( 255, 255, 255, .6 ); }
.hover-fill-white-50:hover { fill: rgba( 255, 255, 255, .5 ); }
.hover-fill-white-40:hover { fill: rgba( 255, 255, 255, .4 ); }
.hover-fill-white-30:hover { fill: rgba( 255, 255, 255, .3 ); }
.hover-fill-white-20:hover { fill: rgba( 255, 255, 255, .2 ); }
.hover-fill-white-10:hover { fill: rgba( 255, 255, 255, .1 ); }
.hover-fill-white-05:hover { fill: rgba( 255, 255, 255, .05 ); }
.hover-fill-white-025:hover { fill: rgba( 255, 255, 255, .025 ); }
.hover-fill-white-0125:hover { fill: rgba( 255, 255, 255, .0125 ); }
.hover-fill-black-90:hover { fill: rgba( 0, 0, 0, .9 ); }
.hover-fill-black-80:hover { fill: rgba( 0, 0, 0, .8 ); }
.hover-fill-black-70:hover { fill: rgba( 0, 0, 0, .7 ); }
.hover-fill-black-60:hover { fill: rgba( 0, 0, 0, .6 ); }
.hover-fill-black-50:hover { fill: rgba( 0, 0, 0, .5 ); }
.hover-fill-black-40:hover { fill: rgba( 0, 0, 0, .4 ); }
.hover-fill-black-30:hover { fill: rgba( 0, 0, 0, .3 ); }
.hover-fill-black-20:hover { fill: rgba( 0, 0, 0, .2 ); }
.hover-fill-black-10:hover { fill: rgba( 0, 0, 0, .1 ); }
.hover-fill-black-05:hover { fill: rgba( 0, 0, 0, .05 ); }
.hover-fill-black-025:hover { fill: rgba( 0, 0, 0, .025 ); }
.hover-fill-black-0125:hover { fill: rgba( 0, 0, 0, .0125 ); }
.hover-fill-dark-red:hover { fill: #e7040f; }
.hover-fill-red:hover { fill: #ff4136; }
.hover-fill-light-red:hover { fill: #ff725c; }
.hover-fill-orange:hover { fill: #ff6300; }
.hover-fill-gold:hover { fill: #ffb700; }
.hover-fill-yellow:hover { fill: #ffd700; }
.hover-fill-light-yellow:hover { fill: #fbf1a9; }
.hover-fill-purple:hover { fill: #5e2ca5; }
.hover-fill-light-purple:hover { fill: #a463f2; }
.hover-fill-dark-pink:hover { fill: #d5008f; }
.hover-fill-hot-pink:hover { fill: #ff41b4; }
.hover-fill-pink:hover { fill: #ff80cc; }
.hover-fill-light-pink:hover { fill: #ffa3d7; }
.hover-fill-dark-green:hover { fill: #137752; }
.hover-fill-green:hover { fill: #19a974; }
.hover-fill-light-green:hover { fill: #9eebcf; }
.hover-fill-navy:hover { fill: #001b44; }
.hover-fill-dark-blue:hover { fill: #00449e; }
.hover-fill-blue:hover { fill: #357edd; }
.hover-fill-light-blue:hover { fill: #96ccff; }
.hover-fill-lightest-blue:hover { fill: #cdecff; }
.hover-fill-washed-blue:hover { fill: #f6fffe; }
.hover-fill-washed-green:hover { fill: #e8fdf5; }
.hover-fill-washed-yellow:hover { fill: #fffceb; }
.hover-fill-washed-red:hover { fill: #ffdfdf; }
.hover-fill-transparent:hover { fill: transparent; }


/*
  description: fill opacity
  property: fill-opacity
*/

.fill-o-05 { fill-opacity: .05; }
.fill-o-10 { fill-opacity: .10; }
.fill-o-20 { fill-opacity: .20; }
.fill-o-25 { fill-opacity: .25; }
.fill-o-30 { fill-opacity: .30; }
.fill-o-40 { fill-opacity: .40; }
.fill-o-50 { fill-opacity: .50; }
.fill-o-60 { fill-opacity: .60; }
.fill-o-75 { fill-opacity: .75; }
.fill-o-80 { fill-opacity: .80; }
.fill-o-90 { fill-opacity: .90; }


/*
  description: fill opacity, on hover
  property: fill-opacity
*/

.hover-fill-o-05:hover { fill-opacity: .05; }
.hover-fill-o-10:hover { fill-opacity: .10; }
.hover-fill-o-20:hover { fill-opacity: .20; }
.hover-fill-o-25:hover { fill-opacity: .25; }
.hover-fill-o-30:hover { fill-opacity: .30; }
.hover-fill-o-40:hover { fill-opacity: .40; }
.hover-fill-o-50:hover { fill-opacity: .50; }
.hover-fill-o-60:hover { fill-opacity: .60; }
.hover-fill-o-75:hover { fill-opacity: .75; }
.hover-fill-o-80:hover { fill-opacity: .80; }
.hover-fill-o-90:hover { fill-opacity: .90; }


/*
  property: shape-rendering
  supported values: auto | optimizeSpeed | crispEdges | geometricPrecision | inherit
*/

.shape-render-auto { shape-rendering: auto; }
.shape-render-inherit { shape-rendering: inherit; }
.shape-render-optimize { shape-rendering: optimizeSpeed; }
.shape-render-crisp { shape-rendering: crispEdges; }
.shape-render-geo { shape-rendering: geometricPrecision; }
